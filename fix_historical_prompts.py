#!/usr/bin/env python3
"""
Script para reparar problemas de contexto hist√≥rico en proyectos existentes.
Regenera los prompts de imagen con contexto hist√≥rico correcto.
"""

import json
import logging
from pathlib import Path
from utils.scene_generator import SceneGenerator
from utils.ai_services import AIServices

# Configurar logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def fix_historical_prompts(project_path: str):
    """
    Repara los prompts anacr√≥nicos de un proyecto aplicando contexto hist√≥rico correcto.
    """
    project_path = Path(project_path)
    scenes_file = project_path / "scenes.json"
    
    if not scenes_file.exists():
        logger.error(f"No se encontr√≥ {scenes_file}")
        return False
    
    # Cargar proyecto actual
    with open(scenes_file, 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    project_info = data.get("project_info_summary", {})
    scenes = data.get("scenes", [])
    
    logger.info(f"üèõÔ∏è Reparando proyecto: {project_info.get('titulo', 'Sin t√≠tulo')}")
    logger.info(f"üìä Escenas a reparar: {len(scenes)}")
    
    # Configurar el generador de escenas
    scene_generator = SceneGenerator()
    ai_service = AIServices()
    
    # Configuraci√≥n del prompt hist√≥rico
    image_prompt_config = {
        "prompt_obj": {
            "nombre": "Escenas Fotorrealistas Hist√≥ricamente Precisas",
            "system_prompt": """Eres un experto en generaci√≥n de prompts para im√°genes fotorrealistas con precisi√≥n hist√≥rica y cultural.
Tu tarea es crear prompts detallados que generen im√°genes hiperrealistas respetando el contexto hist√≥rico, cultural y geogr√°fico espec√≠fico del contenido.

DEBES ANALIZAR Y INCLUIR:
- Per√≠odo hist√≥rico exacto y sus caracter√≠sticas visuales
- Arquitectura t√≠pica de la √©poca y regi√≥n
- Vestimenta, peinados y accesorios apropiados para el tiempo
- Tecnolog√≠a, objetos y herramientas disponibles en ese per√≠odo
- Contexto geogr√°fico y cultural espec√≠fico
- Materiales, texturas y colores aut√©nticos de la √©poca

SIEMPRE INCLUYE:
- Personajes con caracter√≠sticas f√≠sicas y vestimenta hist√≥ricamente precisas
- Ambiente y escenario con arquitectura y elementos de la √©poca correcta
- Iluminaci√≥n natural apropiada (velas, antorchas, luz solar seg√∫n corresponda)
- Composici√≥n fotogr√°fica profesional con profundidad de campo
- Materiales, texturas y objetos aut√©nticos del per√≠odo
- Referencias espec√≠ficas al estilo art√≠stico de la √©poca si aplica

EVITA COMPLETAMENTE:
- Elementos modernos o anacr√≥nicos
- Arquitectura, vestimenta o tecnolog√≠a posterior al per√≠odo
- Materiales o colores que no exist√≠an en la √©poca
- Peinados, maquillaje o accesorios modernos

El prompt debe ser en ingl√©s, hist√≥ricamente preciso y t√©cnicamente detallado.""",
            "user_prompt": """Genera un prompt detallado para crear una imagen fotorrealista hist√≥ricamente precisa que represente:

CONTEXTO DEL VIDEO:
T√≠tulo: {titulo}
Tema general: {contexto}
PER√çODO HIST√ìRICO: {periodo_historico}
UBICACI√ìN GEOGR√ÅFICA: {ubicacion}
CONTEXTO CULTURAL: {contexto_cultural}

ESCENA A REPRESENTAR:
{scene_text}

Crea un prompt que:
1. Respete completamente el per√≠odo hist√≥rico especificado
2. Incluya arquitectura, vestimenta y objetos aut√©nticos de la √©poca
3. Mantenga coherencia cultural y geogr√°fica
4. Use terminolog√≠a fotogr√°fica t√©cnica precisa
5. Evite cualquier elemento anacr√≥nico o moderno
6. Capture la esencia de la escena con m√°ximo realismo hist√≥rico

El prompt debe ser en ingl√©s y extremadamente detallado en aspectos hist√≥ricos.""",
            "variables": [
                "contexto",
                "titulo", 
                "scene_text",
                "periodo_historico",
                "ubicacion",
                "contexto_cultural"
            ]
        },
        "historical_variables": {
            "periodo_historico": "Siglo IV d.C. (circa 280-316 d.C.), Imperio Romano tard√≠o, era de las persecuciones cristianas bajo Diocleciano",
            "ubicacion": "Sebastea, Armenia hist√≥rica (actual Sivas, Turqu√≠a), regi√≥n monta√±osa del Asia Menor bajo dominio romano",
            "contexto_cultural": "Cristianismo primitivo bajo persecuci√≥n sistem√°tica del emperador Diocleciano, comunidades cristianas clandestinas, tradici√≥n m√©dica greco-romana, conflicto entre paganismo y cristianismo emergente"
        }
    }
    
    logger.info("üîß Regenerando prompts con contexto hist√≥rico correcto...")
    
    # Regenerar prompts para todas las escenas
    fixed_scenes = scene_generator.generate_prompts_for_scenes(
        scenes, 
        project_info, 
        image_prompt_config, 
        ai_service
    )
    
    # Crear backup del archivo original
    backup_file = project_path / f"scenes_backup_{data['project_info_summary'].get('last_modified', 'unknown')}.json"
    with open(backup_file, 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)
    logger.info(f"üíæ Backup creado: {backup_file}")
    
    # Actualizar datos
    data["scenes"] = fixed_scenes
    data["project_info_summary"]["last_modified"] = "2025-06-27T21:30:00.000000"
    data["project_info_summary"]["fixed_historical_context"] = True
    
    # Guardar archivo reparado
    with open(scenes_file, 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)
    
    logger.info("‚úÖ Proyecto reparado exitosamente!")
    logger.info(f"üìÅ Archivo actualizado: {scenes_file}")
    logger.info(f"üîç Revisa los nuevos prompts - deber√≠an ser 100% precisos hist√≥ricamente")
    
    return True

if __name__ == "__main__":
    project_path = "projects/san_blas__58f6615d"
    
    print("üèõÔ∏è REPARADOR DE CONTEXTO HIST√ìRICO")
    print("=" * 50)
    print(f"Proyecto a reparar: {project_path}")
    print("Este script corregir√° los prompts anacr√≥nicos aplicando")
    print("el contexto hist√≥rico correcto de San Blas (Siglo IV d.C.)")
    print("=" * 50)
    
    confirm = input("\n¬øContinuar con la reparaci√≥n? (s/N): ").strip().lower()
    if confirm in ['s', 's√≠', 'si', 'y', 'yes']:
        success = fix_historical_prompts(project_path)
        if success:
            print("\nüéâ ¬°REPARACI√ìN COMPLETADA!")
            print("Todos los prompts ahora son hist√≥ricamente precisos")
            print("y est√°n contextualizados en el siglo IV d.C. en Armenia")
        else:
            print("\n‚ùå Error durante la reparaci√≥n")
    else:
        print("Operaci√≥n cancelada") 